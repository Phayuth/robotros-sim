<?xml version='1.0'?>

<sdf version='1.4'>

	<model name="robotros_test">

		<static>false</static>

		<link name='chassis'>
			<pose>0 0 0.1 0 0 0</pose>

			<inertial>
				<mass>10.0</mass>
				<pose>0.0 0 0.1 0 0 0</pose>
				<inertia>
					<ixx>0.5</ixx>
					<iyy>1.0</iyy>
					<izz>0.1</izz>
				</inertia>
			</inertial>
			<collision name='collision'>
				<geometry>
					<box>
						<size>.4 .2 .1</size>
					</box>
				</geometry>
			</collision>

			<visual name='visual'>
				<pose>0 0 0.0 0 0 0</pose>
				<geometry>
					<box>
						<size>.4 .2 .1</size>
					</box>
				</geometry>
				<material> <!-- material -->
					<ambient>255 0 0 1</ambient>
					<diffuse>255 0 0 1</diffuse>
					<specular>0 0 0 0</specular>
					<emissive>0 0 0 1</emissive>
				</material> <!--material -->
			</visual>

			<collision name='caster1_collision'>
				<pose>-0.15 0 -0.05 0 0 0</pose>
				<geometry>
					<sphere>
						<radius>.05</radius>
					</sphere>
				</geometry>

				<surface>
					<friction>
						<ode>
							<mu>0</mu>
							<mu2>0</mu2>
							<slip1>1.0</slip1>
							<slip2>1.0</slip2>
						</ode>
					</friction>
				</surface>
			</collision>

			<visual name='caster1_visual'>
				<pose>-0.15 0 -0.05 0 0 0</pose>
				<geometry>
					<sphere>
						<radius>.05</radius>
					</sphere>
				</geometry>
			</visual>

			<collision name='caster2_collision'>
				<pose>0.15 0 -0.05 0 0 0</pose>
				<geometry>
					<sphere>
						<radius>.05</radius>
					</sphere>
				</geometry>

				<surface>
					<friction>
						<ode>
							<mu>0</mu>
							<mu2>0</mu2>
							<slip1>1.0</slip1>
							<slip2>1.0</slip2>
						</ode>
					</friction>
				</surface>
			</collision>

			<visual name='caster2_visual'>
				<pose>0.15 0 -0.05 0 0 0</pose>
				<geometry>
					<sphere>
						<radius>.05</radius>
					</sphere>
				</geometry>
			</visual>
		</link>

		<link name="left_wheel">
			<pose>0 0.13 0.1 0 1.5707 1.5707</pose>
			<collision name="collision">
				<geometry>
					<cylinder>
						<radius>.1</radius>
						<length>.05</length>
					</cylinder>
				</geometry>
			</collision>
			<visual name="visual">
				<geometry>
					<cylinder>
						<radius>.1</radius>
						<length>.05</length>
					</cylinder>
				</geometry>
				<material> <!-- material -->
					<ambient>37 90 201 1</ambient>
					<diffuse>37 90 201 1</diffuse>
					<specular>0 0 0 0</specular>
					<emissive>0 0 0 1</emissive>
				</material> <!--material -->
			</visual>
		</link>

		<link name="right_wheel">
			<pose>0 -0.13 0.1 0 1.5707 1.5707</pose>
			<collision name="collision">
				<geometry>
					<cylinder>
						<radius>.1</radius>
						<length>.05</length>
					</cylinder>
				</geometry>
			</collision>
			<visual name="visual">
				<geometry>
					<cylinder>
						<radius>.1</radius>
						<length>.05</length>
					</cylinder>
				</geometry>
				<material> <!-- material -->
					<ambient>37 90 201 1</ambient>
					<diffuse>37 90 201 1</diffuse>
					<specular>0 0 0 0</specular>
					<emissive>0 0 0 1</emissive>
				</material> <!--material -->
			</visual>
		</link>

		<link name="lidar_link">
			<pose>0 0 0.185 0 0 0</pose>

			<!--inertial>
				<mass>0.6</mass>
				<inertia>
					<ixx>0.00001974</ixx>
					<ixy>0</ixy>
					<ixz>0</ixz>
					<iyy>0.00001974</iyy>
					<iyz>0</iyz>
					<izz>0.00003505</izz>
				</inertia>
			</inertial-->

			<collision name="collision">
				<geometry>
					<cylinder>
						<radius>0.0325</radius>
						<length>0.070</length>
					</cylinder>
				</geometry>
			</collision>

			<visual name="visual">
				<geometry>
					<cylinder>
						<radius>0.0325</radius>
						<length>0.070</length>
					</cylinder>
				</geometry>
				<material> <!-- material -->
					<ambient>35 230 106 1</ambient>
					<diffuse>35 230 106 1</diffuse>
					<specular>0 0 0 0</specular>
					<emissive>0 0 0 1</emissive>
				</material> <!--material -->
			</visual>

			<sensor type="gpu_ray" name="head_hokuyo_sensor">
				<pose>0 0 0.020 0 0 0</pose>
				<visualize>false</visualize>
				<update_rate>40</update_rate>
				<ray>
					<scan>
						<horizontal>
							<samples>720</samples>
							<resolution>1</resolution>
							<min_angle>-3.14159</min_angle>  <!--min_angle>-1.570796</min_angle-->
							<max_angle>3.14159</max_angle>   <!--max_angle>1.570796</max_angle-->
						</horizontal>
					</scan>
					<range>
						<min>0.10</min>
						<max>12.0</max>
						<resolution>0.01</resolution>
					</range>
					<noise>
						<type>gaussian</type>
						<mean>0.0</mean>
						<stddev>0.01</stddev>
					</noise>
				</ray>
				<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
					<topicName>/laser/scan</topicName>
					<frameName>lidar_link</frameName>
				</plugin>
			</sensor>
		</link>

		<link name="imu_link">
			<pose>0.100 0 0.155 0 0 0</pose> <!--Gap of 2mm-->

			<!--inertial>
				<mass>0.05</mass>
				<inertia>
					<ixx>0.00000002</ixx>
					<ixy>0</ixy>
					<ixz>0</ixz>
					<iyy>0.00000002</iyy>
					<iyz>0</iyz>
					<izz>0.00000002</izz>
				</inertia>
			</inertial-->

			<collision name="collision">
				<geometry>
					<box>
						<size>0.01 0.01 0.01</size>
					</box>
				</geometry>
			</collision>

			<visual name="visual">
				<geometry>
					<box>
						<size>0.01 0.01 0.01</size>
					</box>
				</geometry>
				<material> <!-- material -->
					<ambient>35 230 106 1</ambient>
					<diffuse>35 230 106 1</diffuse>
					<specular>0 0 0 0</specular>
					<emissive>0 0 0 1</emissive>
				</material> <!--material -->
			</visual>

			<gravity>true</gravity>
			<sensor name="imu_sensor" type="imu">
				<always_on>true</always_on>
				<update_rate>100</update_rate>
				<visualize>true</visualize>
				<topic>__default_topic__</topic>
				<plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
					<topicName>imu</topicName>
					<bodyName>imu_link</bodyName>
					<updateRateHZ>10</updateRateHZ><!--10-->
					<gaussianNoise>0</gaussianNoise><!--0.1-->
					<xyzOffset>0 0 0</xyzOffset>
					<rpyOffset>0 0 0</rpyOffset>
					<frameName>imu_link</frameName>
					<initialOrientationAsReference>false</initialOrientationAsReference>
				</plugin>
				<pose>0 0 0 0 0 0</pose>
			</sensor>
		</link>

		<joint type="revolute" name="left_wheel_hinge">
			<pose>0 0 -0.03 0 0 0</pose>
			<child>left_wheel</child>
			<parent>chassis</parent>
			<axis>
				<xyz>0 1 0</xyz>
			</axis>
		</joint>

		<joint type="revolute" name="right_wheel_hinge">
			<pose>0 0 0.03 0 0 0</pose>
			<child>right_wheel</child>
			<parent>chassis</parent>
			<axis>
				<xyz>0 1 0</xyz>
			</axis>
		</joint>

		<joint type="fixed" name="lidar_joint">
			<pose>0 0 -0.025 0 0 0</pose>
			<child>lidar_link</child>
			<parent>chassis</parent>
			<axis>
				<xyz>0 0 1</xyz> <!-- what axis that it going to rotate about-->
			</axis>
		</joint>

		<joint type="fixed" name="imu_joint">
			<pose>0 0 -0.005 0 0 0</pose>
			<child>imu_link</child>
			<parent>chassis</parent>
			<axis>
				<xyz>0 0 1</xyz> <!-- what axis that it going to rotate about-->
			</axis>
		</joint>

		<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
			<alwaysOn>true</alwaysOn>

			<!-- Plugin update rate in Hz -->
			<updateRate>20</updateRate>

			<!-- Name of left joint, defaults to `left_joint` -->
			<leftJoint>left_wheel_hinge</leftJoint>

			<!-- Name of right joint, defaults to `right_joint` -->
			<rightJoint>right_wheel_hinge</rightJoint>

			<!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
			<wheelSeparation>0.26</wheelSeparation>

			<!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
			<wheelDiameter>0.2</wheelDiameter>

			<!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
			<wheelAcceleration>0</wheelAcceleration>

			<!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
			<wheelTorque>5</wheelTorque>

			<!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
			<commandTopic>cmd_vel</commandTopic>

			<!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
			<odometryTopic>odom</odometryTopic>

			<!-- Odometry frame, defaults to `odom` -->
			<odometryFrame>odom</odometryFrame>

			<!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
			<robotBaseFrame>chassis</robotBaseFrame>

			<!-- Odometry source, encoder, world, defaults to world -->
			<odometrySource>encoder</odometrySource>

			<!-- Set to true to publish transforms for the wheel links, defaults to false -->
			<publishWheelTF>false</publishWheelTF><!--true-->

			<!-- Set to true to publish transforms for the odometry, defaults to true -->
			<publishOdometry>false</publishOdometry><!--true-->

			<publishOdomTF>false</publishOdomTF> <!--true-->
			<!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
			<publishWheelJointState>false</publishWheelJointState>

			<!-- Set to true to swap right and left wheels, defaults to true -->
			<legacyMode>false</legacyMode>

			<publishTf>1</publishTf> <!--1-->
		</plugin>

		<plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
			<alwaysOn>true</alwaysOn>
			<updateRate>20</updateRate>
			<bodyName>chassis</bodyName>
			<topicName>ground_truth/state</topicName>
			<gaussianNoise>0</gaussianNoise><!--0.1-->
			<frameName>map</frameName>
			<xyzOffsets>0 0 0</xyzOffsets>
			<rpyOffsets>0 0 0</rpyOffsets>
		</plugin>
	</model>
</sdf>